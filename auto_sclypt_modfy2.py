import re

before_script = """
霊夢「首都直下型地震が起こると、日本全体に影響が出るかもしれないって話だったけど、具体的にどんな被害が想定されているのかしら？」

魔理沙「政府のシミュレーションでは、マグニチュード7クラスの地震が東京23区直下で発生した場合、最悪で2万3000人以上の犠牲者が出るとされているぜ。」

霊夢「そんなに？ なんでそんなに被害が大きくなっちゃうの？」

魔理沙「主な要因は三つあるぜ。『建物の倒壊』『火災』そして『インフラの麻痺』だな。」

霊夢「どれも怖そうだけど、特に火災が気になるわ。地震の後に火事が起こるの？」

魔理沙「ああ、過去の大地震でもそうだったが、都市部では地震の後に火災が発生しやすいんだ。例えば、1923年の関東大震災では、火災によって約10万人が犠牲になったと言われている。」

霊夢「え？ そんなに多くの人が火事で？」

魔理沙「関東大震災のときは、ちょうど昼時で、多くの家でかまどや火鉢が使われていた。それが地震の揺れで倒れて火がついてしまい、大火災になったんだぜ。しかも、その日は強風だったから、火がどんどん広がってしまった。」

霊夢「今の時代はガスコンロとか電気が主流だけど、それでも火災は起こるの？」

魔理沙「ああ、都市部ではガスや電気の配線が切れて発火することがあるし、家具が倒れてストーブやヒーターに引火することもあるぜ。それに、地震の直後は消防がすぐに動けるとは限らない。道路が寸断されたり、火災現場が多すぎて対応が追いつかない場合もあるからな。」

霊夢「なるほど。地震の揺れだけじゃなくて、その後の火事も怖いのね。」

魔理沙「そうなんだぜ。だから、地震のときはまず身を守ることが最優先だけど、その後の火災にも警戒する必要があるんだ。」

霊夢「じゃあ、インフラの麻痺っていうのは？」

魔理沙「インフラの麻痺っていうのは、電気・水道・ガス・通信・交通の機能が、止まってしまうことだな。特に東京みたいな大都市では、これが長期間続くと大変なことになるぜ。」

霊夢「例えばどんな影響があるの？」

魔理沙「まず電気が止まると、照明や冷暖房が使えなくなるだけじゃなく、エレベーターが止まるから高層ビルに閉じ込められる人が出るぜ。病院の機器も影響を受けるし、信号も消えるから交通が混乱するな。」

霊夢「エレベーターに閉じ込められるのは怖いわね。水道やガスは？」

魔理沙「水道が止まると、飲み水が確保できなくなるだけじゃなく、トイレも使えなくなる。都市部ではマンションの高層階に水を送るのに電力を使うから、停電すると水も止まることがあるぜ。ガスは、復旧に時間がかかることが多いな。地震でガス管が破損すると、再開するのに安全確認が必要だからな。」

霊夢「じゃあ、通信が止まるとどうなるの？」

魔理沙「スマホやネットがつながらなくなると、家族や友人と連絡が取れなくなるし、救助要請も難しくなるぜ。特に、大地震の直後は電話が殺到して回線がパンクすることがある。だから、緊急時には『災害用伝言ダイヤル』や『SNS』を活用するのが推奨されているな。」

霊夢「交通の影響も大きそうね。」

魔理沙「そうだぜ。首都直下型地震が発生すると、鉄道はすぐに止まるし、高速道路も通行止めになる可能性が高い。空港も被害を受けると使えなくなるし、都市部では道路が混雑して緊急車両の通行が難しくなるぜ。」

霊夢「そんな状況になったら、避難も大変そうね。」

魔理沙「そうなんだぜ。だから、日頃から防災意識を持って準備しておくことが大事なんだ。」

霊夢「よく具体的な備えっていうけど、どんなことをすればいいのかしら？ 防災グッズをそろえるだけじゃダメなの？」

魔理沙「もちろん防災グッズを準備するのは重要だぜ。でも、それだけじゃなくて、いざという時にどう行動するかを考えておくことも大事なんだ。」

霊夢「うーん、例えばどんなことを考えておけばいいの？」

魔理沙「まずは『自分がいる場所ごとの避難ルートの確認』だな。家にいる時、職場や学校にいる時、外出先にいる時、それぞれで安全な避難場所を事前に知っておくことが大切だぜ。」

霊夢「ああ、それなら近くの公園とかが避難所になってるって聞いたことがあるわ。」

魔理沙「そうだな。でも、避難所に行く前に、家の中や周囲の状況をしっかり確認する必要があるぜ。特に火災が発生していたら、無理に避難所に行こうとせずに別の安全な場所を探すことも大事だな。」

霊夢「確かに、火事が広がっている中で移動するのは危険ね。そういえば、防災グッズって具体的に何を準備しておけばいいの？」

魔理沙「最低限必要なのは、『飲料水』『非常食』『懐中電灯』『モバイルバッテリー』『救急セット』『簡易トイレ』『防寒具』あたりだな。あとは状況に応じて『現金』『笛』『ラジオ』『ヘルメット』なんかも役に立つぜ。」

霊夢「結構いろいろあるのね。特に水は重要そうだけど、どれくらい用意すればいいの？」

魔理沙「一般的には、一人あたり1日3リットル、最低でも3日分、できれば1週間分が推奨されているぜ。水道が止まると給水車が来るまで時間がかかることがあるからな。」

霊夢「3日分でも結構な量になるわね。」

魔理沙「そうなんだぜ。非常食も、水がなくても食べられるものを用意しておくのがポイントだな。缶詰、乾パン、フリーズドライ食品なんかがいいぜ。」

霊夢「モバイルバッテリーも必須よね。スマホが使えなくなったら、情報が入ってこなくなるし。」

魔理沙「その通りだぜ。スマホの充電が切れたら通信手段がなくなるし、懐中電灯代わりにもなるからな。あとは、停電時でも情報を得られるように、手回しラジオがあると安心だぜ。」

霊夢「なるほどね。でも、避難するときに持ち運びやすいように、あまり荷物を多くしすぎるのもダメそうね。」

魔理沙「正解だぜ。だから、非常用持ち出し袋と備蓄品を分けて準備しておくのがベストだな。非常用持ち出し袋には、すぐに避難するときに必要なものをコンパクトにまとめておくんだ。」

霊夢「確かに、それなら持ち出しやすそうね。ところで、地震が起こる前にできる対策って他にあるの？」

魔理沙「家具の固定が重要だな。大地震が起こると、倒れた家具や落ちてきた物でケガをする人が多いんだ。だから、本棚やタンスはL字金具で壁に固定したり、耐震マットを使ったりして転倒を防ぐのが大事だぜ。」

霊夢「確かに、本棚とかが倒れてきたら危ないわね。特に寝ているときに揺れたら怖そう。」

魔理沙「だから、寝る場所の近くには大きな家具を置かないようにするのも大事だな。それに、割れ物が落ちてくるのを防ぐために、食器棚には耐震ラッチをつけるといいぜ。」

霊夢「なるほどね。意外と事前にできることって多いのね。」

魔理沙「そうなんだぜ。次は、地震が発生した直後にどう行動すればいいかについて話していくぜ。」

霊夢「地震が発生した直後の行動って、やっぱりすぐに外に逃げるのが正解なのかしら？」

魔理沙「いや、それは状況によるぜ。むやみに外に飛び出すのはかえって危険なこともあるんだ。」

霊夢「え？ でも建物の中にいるより、外に出たほうが安全なんじゃないの？」

魔理沙「確かに、古い建物や耐震性が低い場所なら崩れる危険があるから、外に出たほうがいい場合もある。でも、すぐに飛び出すと、落ちてくる瓦やガラス、看板なんかに当たるリスクが高いんだぜ。」

霊夢「ああ、なるほど。確かに、地震の映像とかで、街中の看板が落ちてくるのを見たことがあるわ。」

魔理沙「そうなんだぜ。だから、まずは落下物がないか確認しながら慎重に動くことが大事だな。それと、屋内にいるときは、まず頭を守るのが最優先だぜ。」

霊夢「頭を守るって、どうすればいいの？」

魔理沙「机の下に隠れるのが基本だな。机がない場合は、クッションやカバンで頭を守るだけでも違うぜ。揺れが収まるまでは、なるべく低い姿勢を取るのが重要だな。」

霊夢「なるほどね。もし外にいるときに地震が起きたらどうしたらいいの？」

魔理沙「外にいるときは、なるべく広くて安全な場所に移動するのがベストだな。ただし、ビル街や商店街にいる場合は、落下物に注意しながら、近くの建物から離れることが大事だぜ。」

霊夢「確かに、ビルの近くだとガラスが降ってくるかもしれないものね。」

魔理沙「そうだぜ。あと、電柱やブロック塀の近くも危険だから、そういうものから離れるのもポイントだな。」

霊夢「そう考えると、どこにいても危険はあるのね。」

魔理沙「だからこそ、事前の備えと冷静な行動が大事なんだぜ。あと、電車や車に乗っているときに地震が起きたら、慌てずに指示に従うのが基本だな。」

霊夢「車に乗っているときって、どうするのが正解なの？」

魔理沙「高速道路では急ブレーキをかけると追突事故の危険があるから、徐々に速度を落として安全な場所に停車するのが基本だぜ。一般道でも、周囲の状況を見て、安全な場所に車を停めるようにするんだ。」

霊夢「なるほど。そういえば、地震の後って、やっぱり火災の危険もあるわよね？」

魔理沙「その通りだぜ。だから、揺れが収まったらすぐにガスの元栓を閉めたり、電源を落としたりするのが重要だな。ただし、無理に火を消そうとしてケガをするのは本末転倒だから、安全を確保してから行動することが大切だぜ。」

霊夢「確かに、焦って動いたら逆に危険なこともあるのね。」

魔理沙「そうだぜ。地震発生直後の行動が、生存率を大きく左右するからな。」

霊夢「うーん、やっぱり災害への備えって本当に大事なのね。魔理沙、最終的に一番大切なことって何かしら？」

魔理沙「一番大切なのは、『事前の備え』と『冷静な行動』だな。大地震はいつ起こるかわからないから、普段から防災意識を持っておくことが生存率を上げる鍵になるぜ。」

霊夢「確かに、いざというときに慌てないためには、準備が必要なのね。」

魔理沙「そうだぜ。家族で避難場所や連絡手段を確認しておくのも大事だな。非常用バッグを準備しておけば、いざというときにすぐに行動できる。」

霊夢「私も今日から防災グッズをちゃんと揃えておこうかしら。」

魔理沙「それがいいな。いつ起こるかわからないからこそ、準備しておくことが未来の自分を守ることにつながるんだぜ。」

霊夢「うん、今回の話で防災の大切さがよくわかったわ。魔理沙、ありがとう！」

魔理沙「どういたしましてだぜ。 じゃあ、今日はこのへんで終わりにするか！」
"""

trans_list_script = before_script.strip().split("\n")

def split_script_piriord(line, max_length=35):
    # キャラ名とセリフを分離
    match = re.match(r'(.+?「)(.+?)(」)', line)
    if not match:
        return [line]  # 形式に合わない場合はそのまま返す

    prefix, text, suffix = match.groups()

    # 文を「。」「！」「？」で分割（ただし空文字を除外）
    split_sentences = [s for s in re.split(r"([。！？])", text) if s]

    sentences = []
    temp_sentence = ""

    for part in split_sentences:
        temp_sentence += part  # 文章をつなげる
        if part in "。！？":  # 句読点が来たら一区切り
            sentences.append(f"{prefix}{temp_sentence}」")
            temp_sentence = ""  # リセット

    if temp_sentence:  # 最後に残っていたら追加
        sentences.append(f"{prefix}{temp_sentence}」")

    return sentences

def split_dialogue(line, max_length=35):
    # キャラ名とセリフを分離
    match = re.match(r'(.+?「)(.+)(」)', line)
    if not match:
        return [line]  # 形式に合わない場合はそのまま返す

    prefix, text, suffix = match.groups()

    # 30字以内ならそのまま
    if len(text) <= max_length:
        return [line]

    # 分割候補（句読点、助詞の後で分割）
    split_points = [m.start() - 1 for m in re.finditer(r'『', text)] + [m.start() for m in re.finditer(r'[、』]', text)]

    if split_points and split_points[-1] == len(text) - 1:
        split_points.pop()
    
    if not split_points:
        split_points = [len(text) // 2]  # 分割点がない場合は強制的に2等分

    # できるだけ均等に分割
    best_split = min(split_points, key=lambda x: abs(x - len(text) // 2))

    # セリフを分割
    first_part = text[:best_split + 1].strip()
    second_part = text[best_split + 1:].strip()

    if len(first_part) <= max_length:
        #分割後、P1とP2どちらも制限内なら改行
        if len(second_part) <= max_length:
            return [f"{prefix}{first_part}"] + [f"{second_part}」"]
        #P1は制限内だがP2が制限を超える場合、P1とP2を分割、P2は再度処理
        return [f"{prefix}{first_part}」"] + split_dialogue(f"{prefix}{second_part}」", max_length)
    #P2は制限内だがP1が制限を超える場合、P1とP2を分割、P1は再度処理
    if len(second_part) <= max_length:
        return split_dialogue(f"{prefix}{first_part}」", max_length) + [f"{prefix}{second_part}」"]
    #P1もP2も制限を超える場合、両方再処理
    return split_dialogue(f"{prefix}{first_part}」", max_length) + split_dialogue(f"{prefix}{second_part}」", max_length)

ssp_list = []

for line in trans_list_script:
    ssp = split_script_piriord(line)
    #print("\n".join(ssp))
    ssp_list += ssp

#print(f"{ssp_list}")

for text in ssp_list:
    after_script = split_dialogue(text)
    print("\n".join(after_script))